{"ast":null,"code":"import { User } from \"../../classes\";\n\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\n//         if (err) {\n//             return console.error(err.message)\n//         }\n//         console.log('Connected to Care Central')\n//     })\n\nexport async function createUser(username) {\n  return new Promise((resolve, reject) => {\n    let db = new sql.Database(\"d:\\CareCentral.db\", err => {\n      if (err) {\n        console.error(err.message);\n        return reject(new User(err.message));\n      }\n      console.log('Connected to Care Central');\n    });\n    let query = `SELECT username FROM Users WHERE username =?`;\n    let newUser;\n    db.get(query, [username], (err, row) => {\n      if (err) {\n        console.error(err.message);\n        db.close(closeErr => {\n          if (closeErr) {\n            console.error(closeErr.message);\n          }\n          console.log(\"Disconnected from Care Central\");\n        });\n        return reject(new User(err.message));\n      }\n      if (row) {\n        newUser = new User(row.username);\n        resolve(newUser);\n      } else {\n        resolve(new User(\"Error: User not found\"));\n      }\n      db.close(closeErr => {\n        if (closeErr) {\n          console.error(closeErr.message);\n        }\n        console.log(\"Disconnected from Care Central\");\n      });\n    });\n  });\n}","map":{"version":3,"names":["User","createUser","username","Promise","resolve","reject","db","sql","Database","err","console","error","message","log","query","newUser","get","row","close","closeErr"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/backend/fetchData.tsx"],"sourcesContent":["import axios from \"axios\"\r\nimport { User } from \"../../classes\"\r\n\r\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n//         if (err) {\r\n//             return console.error(err.message)\r\n//         }\r\n//         console.log('Connected to Care Central')\r\n//     })\r\n\r\ninterface UserRow {\r\n    userId: number;\r\n    username: string;\r\n    // This will be hashed\r\n    passwordHash: string;\r\n    role: string;\r\n    profileImage: Blob | null;\r\n}\r\n\r\nexport async function createUser(username: string): Promise<User> {\r\n    return new Promise((resolve, reject) => {\r\n\r\n        let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n            if (err) {\r\n                console.error(err.message)\r\n                return reject(new User(err.message))\r\n            }\r\n            console.log('Connected to Care Central')\r\n        })\r\n    \r\n        let query = `SELECT username FROM Users WHERE username =?`;\r\n        let newUser: User\r\n\r\n        db.get(query, [username], (err, row: UserRow | undefined) => {\r\n            if (err) {\r\n                console.error(err.message)\r\n                db.close((closeErr) => {\r\n                    if (closeErr) {\r\n                        console.error(closeErr.message)\r\n                    }\r\n                    console.log(\"Disconnected from Care Central\")\r\n                })\r\n                return reject(new User(err.message))\r\n            }\r\n            \r\n            if (row) {\r\n                newUser = new User(row.username)\r\n                resolve(newUser)\r\n            } else {\r\n                resolve(new User(\"Error: User not found\"))\r\n            }\r\n\r\n            db.close((closeErr) => {\r\n                if (closeErr) {\r\n                    console.error(closeErr.message)\r\n                }\r\n                console.log(\"Disconnected from Care Central\")\r\n            })\r\n        })\r\n    })\r\n}"],"mappings":"AACA,SAASA,IAAI,QAAQ,eAAe;;AAEpC;AACA;AACA;AACA;AACA;AACA;;AAWA,OAAO,eAAeC,UAAUA,CAACC,QAAgB,EAAiB;EAC9D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAEpC,IAAIC,EAAE,GAAG,IAAIC,GAAG,CAACC,QAAQ,CAAC,mBAAmB,EAAGC,GAAG,IAAK;MACpD,IAAIA,GAAG,EAAE;QACLC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;QAC1B,OAAOP,MAAM,CAAC,IAAIL,IAAI,CAACS,GAAG,CAACG,OAAO,CAAC,CAAC;MACxC;MACAF,OAAO,CAACG,GAAG,CAAC,2BAA2B,CAAC;IAC5C,CAAC,CAAC;IAEF,IAAIC,KAAK,GAAG,8CAA8C;IAC1D,IAAIC,OAAa;IAEjBT,EAAE,CAACU,GAAG,CAACF,KAAK,EAAE,CAACZ,QAAQ,CAAC,EAAE,CAACO,GAAG,EAAEQ,GAAwB,KAAK;MACzD,IAAIR,GAAG,EAAE;QACLC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,OAAO,CAAC;QAC1BN,EAAE,CAACY,KAAK,CAAEC,QAAQ,IAAK;UACnB,IAAIA,QAAQ,EAAE;YACVT,OAAO,CAACC,KAAK,CAACQ,QAAQ,CAACP,OAAO,CAAC;UACnC;UACAF,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;QACjD,CAAC,CAAC;QACF,OAAOR,MAAM,CAAC,IAAIL,IAAI,CAACS,GAAG,CAACG,OAAO,CAAC,CAAC;MACxC;MAEA,IAAIK,GAAG,EAAE;QACLF,OAAO,GAAG,IAAIf,IAAI,CAACiB,GAAG,CAACf,QAAQ,CAAC;QAChCE,OAAO,CAACW,OAAO,CAAC;MACpB,CAAC,MAAM;QACHX,OAAO,CAAC,IAAIJ,IAAI,CAAC,uBAAuB,CAAC,CAAC;MAC9C;MAEAM,EAAE,CAACY,KAAK,CAAEC,QAAQ,IAAK;QACnB,IAAIA,QAAQ,EAAE;UACVT,OAAO,CAACC,KAAK,CAACQ,QAAQ,CAACP,OAAO,CAAC;QACnC;QACAF,OAAO,CAACG,GAAG,CAAC,gCAAgC,CAAC;MACjD,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}