{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\care-central\\\\src\\\\componants\\\\frontend\\\\RoomToggles.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport RoomToggle from \"./RoomToggle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomToggles({\n  room,\n  user\n}) {\n  _s();\n  const [roomList, setRoomList] = useState({\n    \"Babies\": false,\n    \"Toddler\": false,\n    \"Pre Kindergarten\": false,\n    \"Kindergarten\": false,\n    \"Preschool\": false\n  });\n  const [currentRoom, setCurrentRoom] = useState(room);\n  useEffect(() => {\n    const signedInRoom = Object.keys(roomList).find(roomName => roomList[roomName]);\n    if (signedInRoom) {\n      setCurrentRoom(signedInRoom);\n    } else {\n      setCurrentRoom(undefined);\n    }\n  }, [roomList]);\n  const handleToggleRoom = roomName => {\n    setRoomList(prevList => ({\n      ...prevList,\n      [roomName]: !prevList[roomName]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roomToggle\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current room : \", currentRoom ? currentRoom : \"Not signed into a room\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), Object.keys(roomList).map(roomName => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(RoomToggle, {\n        roomName: roomName,\n        isSignedIn: roomList[roomName],\n        userId: user.getUserId(),\n        onToggle: () => handleToggleRoom(roomName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, roomName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(RoomToggles, \"zSVNiPwULauA0PL2n30pKFbNreE=\");\n_c = RoomToggles;\nexport default RoomToggles;\nvar _c;\n$RefreshReg$(_c, \"RoomToggles\");","map":{"version":3,"names":["useEffect","useState","RoomToggle","jsxDEV","_jsxDEV","RoomToggles","room","user","_s","roomList","setRoomList","currentRoom","setCurrentRoom","signedInRoom","Object","keys","find","roomName","undefined","handleToggleRoom","prevList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","isSignedIn","userId","getUserId","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/frontend/RoomToggles.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { User } from \"../../classes\"\r\nimport RoomToggle from \"./RoomToggle\"\r\n\r\ninterface RoomToggleProps {\r\n  room: string | undefined\r\n  user: User\r\n}\r\n\r\nfunction RoomToggles({ room, user }: RoomToggleProps) {\r\n  const [roomList, setRoomList] = useState<Record<string, boolean>> ({\r\n    \"Babies\": false,\r\n    \"Toddler\": false,\r\n    \"Pre Kindergarten\": false,\r\n    \"Kindergarten\": false,\r\n    \"Preschool\": false\r\n  })\r\n\r\n  const [currentRoom, setCurrentRoom] = useState<string | undefined>(room)\r\n\r\n  useEffect(() => {\r\n    const signedInRoom = Object.keys(roomList).find((roomName) => roomList[roomName])\r\n\r\n    if (signedInRoom) {\r\n      setCurrentRoom(signedInRoom)\r\n    } else {\r\n      setCurrentRoom(undefined)\r\n    }\r\n  }, [roomList])\r\n  \r\n  const handleToggleRoom = (roomName: string) => {\r\n    setRoomList((prevList) => ({\r\n      ...prevList,\r\n      [roomName]: !prevList[roomName]\r\n    }))\r\n  }\r\n  \r\n  return (\r\n    <div className='roomToggle'>\r\n      <p>Current room : {currentRoom ? currentRoom : \"Not signed into a room\"}</p>\r\n      {\r\n        Object.keys(roomList).map((roomName: string) => (\r\n          <li key={roomName}>\r\n            <RoomToggle\r\n              roomName={roomName}\r\n              isSignedIn={roomList[roomName]}\r\n              userId={user.getUserId()}\r\n              onToggle={() => handleToggleRoom(roomName)}\r\n            />\r\n          </li>\r\n        ))\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomToggles"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAOC,UAAU,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOrC,SAASC,WAAWA,CAAC;EAAEC,IAAI;EAAEC;AAAsB,CAAC,EAAE;EAAAC,EAAA;EACpD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAA2B;IACjE,QAAQ,EAAE,KAAK;IACf,SAAS,EAAE,KAAK;IAChB,kBAAkB,EAAE,KAAK;IACzB,cAAc,EAAE,KAAK;IACrB,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAqBK,IAAI,CAAC;EAExEN,SAAS,CAAC,MAAM;IACd,MAAMa,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAACO,IAAI,CAAEC,QAAQ,IAAKR,QAAQ,CAACQ,QAAQ,CAAC,CAAC;IAEjF,IAAIJ,YAAY,EAAE;MAChBD,cAAc,CAACC,YAAY,CAAC;IAC9B,CAAC,MAAM;MACLD,cAAc,CAACM,SAAS,CAAC;IAC3B;EACF,CAAC,EAAE,CAACT,QAAQ,CAAC,CAAC;EAEd,MAAMU,gBAAgB,GAAIF,QAAgB,IAAK;IAC7CP,WAAW,CAAEU,QAAQ,KAAM;MACzB,GAAGA,QAAQ;MACX,CAACH,QAAQ,GAAG,CAACG,QAAQ,CAACH,QAAQ;IAChC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEb,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzBlB,OAAA;MAAAkB,QAAA,GAAG,iBAAe,EAACX,WAAW,GAAGA,WAAW,GAAG,wBAAwB;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1EZ,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAACkB,GAAG,CAAEV,QAAgB,iBACzCb,OAAA;MAAAkB,QAAA,eACElB,OAAA,CAACF,UAAU;QACTe,QAAQ,EAAEA,QAAS;QACnBW,UAAU,EAAEnB,QAAQ,CAACQ,QAAQ,CAAE;QAC/BY,MAAM,EAAEtB,IAAI,CAACuB,SAAS,CAAC,CAAE;QACzBC,QAAQ,EAAEA,CAAA,KAAMZ,gBAAgB,CAACF,QAAQ;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC,GANKT,QAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEV;AAAClB,EAAA,CA7CQH,WAAW;AAAA2B,EAAA,GAAX3B,WAAW;AA+CpB,eAAeA,WAAW;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}