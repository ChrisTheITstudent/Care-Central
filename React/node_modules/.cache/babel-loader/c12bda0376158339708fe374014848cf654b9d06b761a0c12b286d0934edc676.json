{"ast":null,"code":"import { User, Children } from \"../../classes\";\n\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\n//         if (err) {\n//             return console.error(err.message)\n//         }\n//         console.log('Connected to Care Central')\n//     })\n\nconst url = \"http://127.0.0.1:8000/\";\nexport async function createUser(username) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      let newUser = new User(json.id, json.username);\n      if (json.role) {\n        newUser.setRole(json.role);\n      }\n      if (json.profileImage) {\n        newUser.setBlob(json.profileImage);\n      }\n      if (json.room) {\n        newUser.setRoom(json.room);\n      }\n      if (json.id) {\n        fetch(url + \"children/family/\" + json.id).then(response => response.json()).then(json2 => {\n          Object.keys(json2).forEach(key => {\n            const childData = json2[key];\n            console.log(childData);\n            const child = new Children(childData[0], childData[1], childData[2], childData[4]);\n            if (childData[3]) {\n              let splitDOB = childData[3].split(\"/\", 3);\n              child.setDateOfBirth(splitDOB[2], splitDOB[1], splitDOB[0]);\n            }\n            child.setRoom(setRoomBasedOnAge(child));\n            if (childData[7]) {\n              if (childData[7] === 1) {\n                // child.setMedicalPlan(true)\n              }\n              if (childData[7] === 0) {\n                // child.setMedicalPlan(false)\n              } else {\n                console.log(childData[7]);\n              }\n            }\n            if (childData[8]) {\n              let childDataArray = childData.split(\",\");\n              childDataArray.forEach(allergy => {\n                // child.setAllergy(allergy)\n              });\n            }\n            if (childData[9]) {\n              // child.setAuthorizedPerson(childData[9])\n            }\n            if (childData[10]) {\n              for (let i = 0; i < childData[10].length; i += 2) {\n                const element1 = childData[10][i];\n                const element2 = childData[10][i + 1];\n                let contactToAdd = {\n                  name: element1,\n                  contact: element2\n                };\n                childData.addEmergencyContact(1, contactToAdd.name, contactToAdd.contact);\n              }\n            }\n            if (childData[11]) {\n              for (let i = 0; i < childData[11].length; i += 2) {\n                const element1 = childData[11][i];\n                const element2 = childData[11][i + 1];\n                let contactToAdd = {\n                  name: element1,\n                  contact: element2\n                };\n                childData.addEmergencyContact(2, contactToAdd.name, contactToAdd.contact);\n              }\n            }\n            console.log(child);\n            newUser.setChild(child);\n          });\n          resolve(newUser);\n        }).catch(err => {\n          console.error(err.message);\n          reject(err);\n        });\n      } else {\n        resolve(newUser);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(err);\n    });\n  });\n}\nexport async function verifyPassword(data) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/login/\" + data.username + \"/\" + data.password).then(response => response.json()).then(json => {\n      if (json.status === \"OK\") {\n        resolve(true);\n      } else if (json.status === \"FAILED\") {\n        reject(false);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(err);\n    });\n  });\n}\nexport async function toggleChildIsAttending(childId) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"children/\" + childId + \"/attendance\", {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      resolve(json.message);\n    }).catch(err => {\n      console.error(err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function toggleUserRoom(userId, room) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + userId + \"/room/\" + room, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      resolve(json.message);\n    }).catch(err => {\n      console.error(err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function createChildrenList(username) {\n  return new Promise((resolve, reject) => {\n    let userId;\n    let childArray = [];\n    let child;\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      userId = json.id;\n      return fetch(url + \"children/family/\" + userId);\n    }).then(response => response.json()).then(json => {\n      Object.keys(json).forEach(key => {\n        if (json[key][\"4\"] === 1) {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true);\n        } else {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false);\n        }\n        let splitStringArray;\n        splitStringArray = json[key][\"3\"].split(\"/\");\n        let childDay = +splitStringArray[2];\n        let childMonth = +splitStringArray[1];\n        let childYear = +splitStringArray[0];\n        child.setDateOfBirth(childDay, childMonth, childYear);\n        childArray.push(child);\n      });\n      resolve(childArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch children for user: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function getChildrenByRoomName(roomName) {\n  return new Promise((resolve, reject) => {\n    let childArray = [];\n    let child;\n    fetch(url + \"rooms/\" + roomName).then(response => response.json()).then(json => {\n      if (json.error) {\n        reject(new Error(json.error));\n        return;\n      }\n      Object.keys(json).forEach(key => {\n        if (json[key][\"4\"] === 1) {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true);\n        } else {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false);\n        }\n        let splitStringArray;\n        splitStringArray = json[key][\"3\"].split(\"/\");\n        let childDay = +splitStringArray[2];\n        let childMonth = +splitStringArray[1];\n        let childYear = +splitStringArray[0];\n        child.setDateOfBirth(childDay, childMonth, childYear);\n        childArray.push(child);\n      });\n      resolve(childArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch children for room: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function getEducatorsByRoomName(roomName) {\n  return new Promise((resolve, reject) => {\n    let educatorArray = [];\n    let educator;\n    fetch(url + \"educators/rooms/\" + roomName).then(response => response.json()).then(json => {\n      if (json.error) {\n        reject(new Error(json.error));\n      }\n      Object.keys(json).forEach(key => {\n        educator = new User(json[key][0], json[key][\"1\"]);\n        educatorArray.push(educator);\n      });\n      resolve(educatorArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch educators for room: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport function setRoomBasedOnAge(child) {\n  let diff = Date.now() - child.getDateOfBirth().getTime();\n  let seconds = Math.floor(diff / 1000);\n  let minutes = Math.floor(seconds / 60);\n  let hours = Math.floor(minutes / 60);\n  let days = Math.floor(hours / 24);\n  let months = Math.floor(days / 30);\n  let years = Math.floor(days / 365);\n  seconds %= 60;\n  minutes %= 60;\n  hours %= 24;\n  days %= 30;\n  months %= 12;\n  const age = {\n    years: years,\n    months: months\n  };\n  if (age.years === 1 && age.months < 3 || age.years === 0 && age.months > 0) {\n    return \"Babies\";\n  }\n  if (age.years === 1 && age.months >= 3 || age.years === 2 && age.months < 6) {\n    return \"Toddlers\";\n  }\n  if (age.years == 2 && age.months >= 6 || age.years === 3 && age.months < 3) {\n    return \"Pre Kindergarten\";\n  }\n  if (age.years == 3 && age.months >= 3) {\n    return \"Kindergarten\";\n  }\n  if (age.years > 3) {\n    return \"PreSchool\";\n  } else {\n    return \"Please check DOB\";\n  }\n}","map":{"version":3,"names":["User","Children","url","createUser","username","Promise","resolve","reject","fetch","then","response","json","newUser","id","role","setRole","profileImage","setBlob","room","setRoom","json2","Object","keys","forEach","key","childData","console","log","child","splitDOB","split","setDateOfBirth","setRoomBasedOnAge","childDataArray","allergy","i","length","element1","element2","contactToAdd","name","contact","addEmergencyContact","setChild","catch","err","error","message","verifyPassword","data","password","status","toggleChildIsAttending","childId","method","headers","Error","toggleUserRoom","userId","createChildrenList","childArray","splitStringArray","childDay","childMonth","childYear","push","getChildrenByRoomName","roomName","getEducatorsByRoomName","educatorArray","educator","diff","Date","now","getDateOfBirth","getTime","seconds","Math","floor","minutes","hours","days","months","years","age"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/CareCentral Git/Care-Central/React/src/componants/backend/fetchData.tsx"],"sourcesContent":["import { User, Children } from \"../../classes\"\r\n\r\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n//         if (err) {\r\n//             return console.error(err.message)\r\n//         }\r\n//         console.log('Connected to Care Central')\r\n//     })\r\n\r\ninterface PostResolved {\r\n    \"Status\": string,\r\n    \"Message\": string\r\n}\r\ninterface VerificationData {\r\n    \"username\": String,\r\n    \"password\": String\r\n}\r\n\r\nconst url: string = \"http://127.0.0.1:8000/\"\r\n\r\nexport async function createUser(username: string | null): Promise<User> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let newUser = new User(json.id, json.username)\r\n                if (json.role) {\r\n                    newUser.setRole(json.role)\r\n                }\r\n                if (json.profileImage) {\r\n                    newUser.setBlob(json.profileImage)\r\n                }\r\n                if (json.room) {\r\n                    newUser.setRoom(json.room)\r\n                }\r\n                if (json.id) {\r\n                    fetch(url + \"children/family/\" + json.id)\r\n                        .then(response => response.json())\r\n                        .then(json2 => {\r\n                            Object.keys(json2).forEach((key: string) => {\r\n                                const childData = json2[key];\r\n                                console.log(childData)\r\n                                const child = new Children(childData[0], childData[1], childData[2], childData[4]);\r\n                                if (childData[3]) {\r\n                                    let splitDOB = childData[3].split(\"/\", 3)\r\n                                    child.setDateOfBirth(splitDOB[2], splitDOB[1], splitDOB[0])\r\n                                }\r\n                                child.setRoom(setRoomBasedOnAge(child))\r\n                                if (childData[7]) {\r\n                                    if (childData[7] === 1) {\r\n                                        // child.setMedicalPlan(true)\r\n                                    }\r\n                                    if (childData[7] === 0) {\r\n                                        // child.setMedicalPlan(false)\r\n                                    }\r\n                                    else {\r\n                                        console.log(childData[7])\r\n                                    }\r\n                                }\r\n                                if (childData[8]) {\r\n                                    let childDataArray = childData.split(\",\")\r\n                                    childDataArray.forEach((allergy: string) => {\r\n                                        // child.setAllergy(allergy)\r\n                                    });\r\n                                }\r\n                                if (childData[9]) {\r\n                                    // child.setAuthorizedPerson(childData[9])\r\n                                }\r\n                                if (childData[10]) {\r\n                                    for (let i = 0; i < childData[10].length; i+=2) {\r\n                                        const element1 = childData[10][i];\r\n                                        const element2 = childData[10][i + 1]\r\n                                        \r\n                                        let contactToAdd = {\r\n                                            name: element1,\r\n                                            contact: element2\r\n                                        }\r\n                                        childData.addEmergencyContact(1, contactToAdd.name, contactToAdd.contact)\r\n                                    }\r\n                                }\r\n                                if (childData[11]) {\r\n                                    for (let i = 0; i < childData[11].length; i+=2) {\r\n                                        const element1 = childData[11][i];\r\n                                        const element2 = childData[11][i + 1]\r\n                                        \r\n                                        let contactToAdd = {\r\n                                            name: element1,\r\n                                            contact: element2\r\n                                        }\r\n                                        childData.addEmergencyContact(2, contactToAdd.name, contactToAdd.contact)\r\n                                    }\r\n                                }\r\n\r\n                                console.log(child)\r\n                                \r\n                                newUser.setChild(child)\r\n                            })\r\n                            resolve(newUser)\r\n                        })\r\n                        .catch(err => {\r\n                            console.error(err.message)\r\n                            reject(err)\r\n                        })\r\n                } else {\r\n                    resolve(newUser)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function verifyPassword(data: VerificationData): Promise<Boolean | Error> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/login/\" + data.username + \"/\" + data.password)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (json.status === \"OK\") {\r\n                    resolve(true)\r\n                } else if (json.status === \"FAILED\") {\r\n                    reject(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function toggleChildIsAttending(childId: number): Promise<PostResolved> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"children/\" + childId + \"/attendance\", {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            resolve(json.message)\r\n        })\r\n        .catch(err => {\r\n            console.error(err.message)\r\n            reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function toggleUserRoom(userId: number, room: string | null): Promise<PostResolved> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + userId + \"/room/\" + room, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                resolve(json.message)\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(new Error(err.message))\r\n            })\r\n    })\r\n}\r\n\r\nexport async function createChildrenList(username: string): Promise<Children[]> {\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        let userId: Number\r\n        let childArray: Children[] = []\r\n        let child: Children\r\n        \r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                userId = json.id\r\n\r\n                return fetch(url + \"children/family/\" + userId)\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                Object.keys(json).forEach((key: string) => {\r\n                    if (json[key][\"4\"] === 1) {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true)\r\n                    } else {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false)\r\n                    }\r\n\r\n                    let splitStringArray: string[]\r\n                    splitStringArray = json[key][\"3\"].split(\"/\")\r\n                    let childDay: number = +splitStringArray[2]\r\n                    let childMonth: number = +splitStringArray[1]\r\n                    let childYear: number = +splitStringArray[0]\r\n                    child.setDateOfBirth(childDay, childMonth, childYear)\r\n\r\n                    childArray.push(child)\r\n                })\r\n                resolve(childArray)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Unable to fetch children for user: \" + err.message)\r\n                reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getChildrenByRoomName(roomName: String): Promise<Children[]> {\r\n    return new Promise((resolve, reject) => {\r\n    let childArray: Children[] = []\r\n    let child: Children\r\n\r\n    fetch(url + \"rooms/\" + roomName)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.error) {\r\n                reject(new Error(json.error))\r\n                return\r\n            }\r\n            Object.keys(json).forEach((key: string) => {\r\n            if (json[key][\"4\"] === 1) {\r\n                child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true)\r\n            } else {\r\n                child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false)\r\n            }\r\n\r\n            let splitStringArray: string[]\r\n            splitStringArray = json[key][\"3\"].split(\"/\")\r\n            let childDay: number = +splitStringArray[2]\r\n            let childMonth: number = +splitStringArray[1]\r\n            let childYear: number = +splitStringArray[0]\r\n            child.setDateOfBirth(childDay, childMonth, childYear)\r\n\r\n            childArray.push(child)\r\n        })\r\n        resolve(childArray)\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Unable to fetch children for room: \" + err.message)\r\n        reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getEducatorsByRoomName(roomName: String): Promise<User[]> {\r\n    return new Promise((resolve, reject) => {\r\n    let educatorArray: User[] = []\r\n    let educator: User\r\n\r\n    fetch(url + \"educators/rooms/\" + roomName)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.error) {\r\n                reject(new Error(json.error))\r\n            }\r\n            Object.keys(json).forEach((key: string) => {\r\n                educator = new User(json[key][0], json[key][\"1\"])\r\n                educatorArray.push(educator)\r\n        })\r\n        resolve(educatorArray)\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Unable to fetch educators for room: \" + err.message)\r\n        reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport function setRoomBasedOnAge(child: Children): string {\r\n    let diff = Date.now() - child.getDateOfBirth().getTime()\r\n\r\n    let seconds = Math.floor(diff / 1000)\r\n    let minutes = Math.floor(seconds / 60)\r\n    let hours = Math.floor(minutes / 60)\r\n    let days = Math.floor(hours / 24)\r\n    let months = Math.floor(days / 30)\r\n    let years = Math.floor(days / 365)\r\n\r\n    seconds %= 60\r\n    minutes %= 60\r\n    hours %= 24\r\n    days %= 30\r\n    months %= 12\r\n\r\n    const age = {\r\n        years: years,\r\n        months: months\r\n    }\r\n\r\n    if (age.years === 1 && age.months < 3 || age.years === 0 && age.months > 0) {\r\n        return \"Babies\"\r\n    }\r\n    if (age.years === 1 && age.months >= 3 || age.years === 2 && age.months < 6) {\r\n        return \"Toddlers\"\r\n    }\r\n    if (age.years == 2 && age.months >= 6 || age.years === 3 && age.months < 3) {\r\n        return \"Pre Kindergarten\"\r\n    }\r\n    if (age.years == 3 && age.months >= 3) {\r\n        return \"Kindergarten\"\r\n    }\r\n    if (age.years > 3) {\r\n        return \"PreSchool\"\r\n    }\r\n    else {\r\n        return \"Please check DOB\"\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}