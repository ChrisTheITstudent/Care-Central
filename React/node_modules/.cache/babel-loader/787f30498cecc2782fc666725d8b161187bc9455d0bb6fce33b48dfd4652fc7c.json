{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\care-central\\\\src\\\\componants\\\\frontend\\\\RoomToggles.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport RoomToggle from \"./RoomToggle\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RoomToggles({\n  room,\n  user\n}) {\n  _s();\n  const [roomList, setRoomList] = useState({\n    \"Babies\": room === \"Babies\",\n    \"Toddler\": room === \"Toddler\",\n    \"Pre Kindergarten\": room === \"Pre Kindergarten\",\n    \"Kindergarten\": room === \"Kindergarten\",\n    \"Preschool\": room === \"Preschool\"\n  });\n  const [currentRoom, setCurrentRoom] = useState(room);\n  useEffect(() => {\n    const signedInRoom = Object.keys(roomList).find(roomName => roomList[roomName]);\n    if (signedInRoom) {\n      setCurrentRoom(signedInRoom);\n    } else {\n      setCurrentRoom(undefined);\n    }\n  }, [roomList]);\n  const handleToggleRoom = roomName => {\n    setRoomList(prevList => {\n      const newRoomList = Object.keys(prevList).reduce((acc, key) => {\n        acc[key] = key === roomName ? !prevList[key] : false;\n        return acc;\n      }, {});\n      return newRoomList;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current room : \", currentRoom ? currentRoom : \"Not signed into a room\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roomToggle\",\n      children: Object.keys(roomList).map(roomName => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggleContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(RoomToggle, {\n            roomName: roomName,\n            isSignedIn: roomList[roomName],\n            userId: user.getUserId(),\n            onToggle: () => handleToggleRoom(roomName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, roomName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(RoomToggles, \"d092sbQbFJ3xwpTfWl9LWiGLPGk=\");\n_c = RoomToggles;\nexport default RoomToggles;\nvar _c;\n$RefreshReg$(_c, \"RoomToggles\");","map":{"version":3,"names":["useEffect","useState","RoomToggle","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomToggles","room","user","_s","roomList","setRoomList","currentRoom","setCurrentRoom","signedInRoom","Object","keys","find","roomName","undefined","handleToggleRoom","prevList","newRoomList","reduce","acc","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","isSignedIn","userId","getUserId","onToggle","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/frontend/RoomToggles.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { User } from \"../../classes\"\r\nimport RoomToggle from \"./RoomToggle\"\r\n\r\ninterface RoomToggleProps {\r\n  room: string | undefined\r\n  user: User\r\n}\r\n\r\nfunction RoomToggles({ room, user }: RoomToggleProps) {\r\n  const [roomList, setRoomList] = useState<Record<string, boolean>> ({\r\n    \"Babies\": room === \"Babies\",\r\n    \"Toddler\": room === \"Toddler\",\r\n    \"Pre Kindergarten\": room === \"Pre Kindergarten\",\r\n    \"Kindergarten\": room === \"Kindergarten\",\r\n    \"Preschool\": room === \"Preschool\"\r\n  })\r\n\r\n  const [currentRoom, setCurrentRoom] = useState<string | undefined>(room)\r\n\r\n  useEffect(() => {\r\n    const signedInRoom = Object.keys(roomList).find((roomName) => roomList[roomName])\r\n\r\n    if (signedInRoom) {\r\n      setCurrentRoom(signedInRoom)\r\n    } else {\r\n      setCurrentRoom(undefined)\r\n    }\r\n  }, [roomList])\r\n  \r\n  const handleToggleRoom = (roomName: string) => {\r\n    setRoomList((prevList) => {\r\n      const newRoomList = Object.keys(prevList).reduce((acc, key) => {\r\n        acc[key] = key === roomName ? !prevList[key] : false\r\n        return acc\r\n      }, {} as Record<string, boolean>)\r\n\r\n      return newRoomList\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <p>Current room : {currentRoom ? currentRoom : \"Not signed into a room\"}</p>\r\n    <div className='roomToggle'>\r\n      {\r\n        Object.keys(roomList).map((roomName: string) => (\r\n          <div className=\"toggleContainer\">\r\n            <li key={roomName}>\r\n              <RoomToggle\r\n                roomName={roomName}\r\n                isSignedIn={roomList[roomName]}\r\n                userId={user.getUserId()}\r\n                onToggle={() => handleToggleRoom(roomName)}\r\n              />\r\n            </li>\r\n            <p>{roomName}</p>\r\n          </div>\r\n        ))\r\n      }\r\n    </div>\r\n    </>\r\n    \r\n  )\r\n}\r\n\r\nexport default RoomToggles"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}