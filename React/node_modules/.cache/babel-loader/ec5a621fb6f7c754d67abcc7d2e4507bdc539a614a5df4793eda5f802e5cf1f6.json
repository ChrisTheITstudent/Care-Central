{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\care-central\\\\src\\\\componants\\\\frontend\\\\RoomToggle.tsx\";\nimport { toggleUserRoom } from \"../backend/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomToggle({\n  roomName,\n  isSignedIn,\n  userId,\n  onToggle\n}) {\n  const clickToggle = () => {\n    if (!isSignedIn) {\n      toggleUserRoom(userId, roomName).then(() => {\n        onToggle();\n      }).catch(error => {\n        console.error(\"Error toggling room: \", error);\n      });\n    } else {\n      toggleUserRoom(userId, null).then(() => {\n        onToggle();\n      }).catch(error => {\n        console.error(\"Error toggling room: \", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isSignedIn ? \"toggleOn\" : \"toggleOff\",\n    onClick: clickToggle,\n    \"data-testid\": \"room-toggle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_c = RoomToggle;\nexport default RoomToggle;\nvar _c;\n$RefreshReg$(_c, \"RoomToggle\");","map":{"version":3,"names":["toggleUserRoom","jsxDEV","_jsxDEV","RoomToggle","roomName","isSignedIn","userId","onToggle","clickToggle","then","catch","error","console","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/frontend/RoomToggle.tsx"],"sourcesContent":["import { toggleUserRoom } from \"../backend/fetchData\"\r\n\r\ninterface RoomToggleProps {\r\n    roomName: string\r\n    isSignedIn: boolean\r\n    userId: number\r\n    onToggle: () => void\r\n}\r\nfunction RoomToggle({ roomName, isSignedIn, userId, onToggle }: RoomToggleProps) {\r\n\r\n    const clickToggle = () => {\r\n        if (!isSignedIn) {\r\n            toggleUserRoom(userId, roomName)\r\n                .then(() => {\r\n                    onToggle()\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error toggling room: \", error)\r\n                })\r\n        }\r\n        \r\n        else {\r\n            toggleUserRoom(userId, null)\r\n                .then(() => {\r\n                    onToggle()\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"Error toggling room: \", error)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={isSignedIn ? \"toggleOn\" : \"toggleOff\"}\r\n            onClick={clickToggle}\r\n            data-testid={\"room-toggle\"}\r\n        />\r\n  )\r\n}\r\n\r\nexport default RoomToggle"],"mappings":";AAAA,SAASA,cAAc,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQrD,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAA0B,CAAC,EAAE;EAE7E,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI,CAACH,UAAU,EAAE;MACbL,cAAc,CAACM,MAAM,EAAEF,QAAQ,CAAC,CAC3BK,IAAI,CAAC,MAAM;QACRF,QAAQ,CAAC,CAAC;MACd,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACV,CAAC,MAEI;MACDX,cAAc,CAACM,MAAM,EAAE,IAAI,CAAC,CACvBG,IAAI,CAAC,MAAM;QACRF,QAAQ,CAAC,CAAC;MACd,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD,CAAC,CAAC;IACV;EACJ,CAAC;EAED,oBACIT,OAAA;IACIW,SAAS,EAAER,UAAU,GAAG,UAAU,GAAG,WAAY;IACjDS,OAAO,EAAEN,WAAY;IACrB,eAAa;EAAc;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9B,CAAC;AAEV;AAACC,EAAA,GA/BQhB,UAAU;AAiCnB,eAAeA,UAAU;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}