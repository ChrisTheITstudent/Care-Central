{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\CareCentral Git\\\\Care-Central\\\\React\\\\src\\\\componants\\\\frontend\\\\OffBoarding.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OffBoarding({\n  option,\n  setOption\n}) {\n  _s();\n  const [formData, setFormData] = useState(option === \"user\" ? {\n    username: \"\"\n  } : {\n    firstName: \"\",\n    lastName: \"\"\n  });\n  const [entries, setEntries] = useState([]);\n  const [closeButtonClass, setCloseButtonClass] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Set inital close button class\n  useEffect(() => {\n    switch (option) {\n      case \"user\":\n        setCloseButtonClass(\"close-user\");\n        break;\n      case \"children\":\n        setCloseButtonClass(\"close-children\");\n        break;\n      default:\n        break;\n    }\n  });\n\n  // Reset formData when option changes\n  useEffect(() => {\n    setFormData(option === \"user\" ? {\n      username: \"\"\n    } : {\n      firstName: \"\",\n      lastName: \"\"\n    });\n  }, [option]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"OffBoarding\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(OffBoarding, \"XzbsJc59txTf0woy2yg7hJLaIeM=\");\n_c = OffBoarding;\nexport default OffBoarding;\nvar _c;\n$RefreshReg$(_c, \"OffBoarding\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","OffBoarding","option","setOption","_s","formData","setFormData","username","firstName","lastName","entries","setEntries","closeButtonClass","setCloseButtonClass","loading","setLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/CareCentral Git/Care-Central/React/src/componants/frontend/OffBoarding.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\ninterface OffboardingProps {\r\n    option: string;\r\n    setOption: React.Dispatch<React.SetStateAction<string | null>>;\r\n}\r\nexport interface UserFormData {\r\n    username: string;\r\n}\r\n\r\nexport interface ChildrenFormData {\r\n    firstName: string;\r\n    lastName: string;\r\n}\r\n\r\nfunction OffBoarding({ option, setOption }: OffboardingProps) {\r\n    const [formData, setFormData] = useState<UserFormData | ChildrenFormData>(\r\n        option === \"user\"\r\n            ? {\r\n                username: \"\"\r\n            }\r\n            : {\r\n                firstName: \"\",\r\n                lastName: \"\"\r\n            }\r\n    )\r\n    const [entries, setEntries] = useState<Array<UserFormData | ChildrenFormData>>([]);\r\n    const [closeButtonClass, setCloseButtonClass] = useState<string>(\"\")\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    // Set inital close button class\r\n        useEffect(() => {\r\n            switch (option) {\r\n                case \"user\":\r\n                    setCloseButtonClass(\"close-user\")\r\n                    break;\r\n                case \"children\":\r\n                    setCloseButtonClass(\"close-children\")\r\n                    break;\r\n            \r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    \r\n        // Reset formData when option changes\r\n        useEffect(() => {\r\n            setFormData(\r\n                option === \"user\"\r\n                    ? {\r\n                        username: \"\"\r\n                    }\r\n                    : {\r\n                        firstName: \"\",\r\n                        lastName: \"\"\r\n                    }\r\n            );\r\n        }, [option]);\r\n\r\n  return (\r\n    <div>OffBoarding</div>\r\n  )\r\n}\r\n\r\nexport default OffBoarding"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAe5C,SAASC,WAAWA,CAAC;EAAEC,MAAM;EAAEC;AAA4B,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CACpCK,MAAM,KAAK,MAAM,GACX;IACEK,QAAQ,EAAE;EACd,CAAC,GACC;IACEC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACd,CACR,CAAC;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAyC,EAAE,CAAC;EAClF,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAS,EAAE,CAAC;EACpE,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAU,KAAK,CAAC;;EAEtD;EACIC,SAAS,CAAC,MAAM;IACZ,QAAQI,MAAM;MACV,KAAK,MAAM;QACPW,mBAAmB,CAAC,YAAY,CAAC;QACjC;MACJ,KAAK,UAAU;QACXA,mBAAmB,CAAC,gBAAgB,CAAC;QACrC;MAEJ;QACI;IACR;EACJ,CAAC,CAAC;;EAEF;EACAf,SAAS,CAAC,MAAM;IACZQ,WAAW,CACPJ,MAAM,KAAK,MAAM,GACX;MACEK,QAAQ,EAAE;IACd,CAAC,GACC;MACEC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE;IACd,CACR,CAAC;EACL,CAAC,EAAE,CAACP,MAAM,CAAC,CAAC;EAElB,oBACEF,OAAA;IAAAgB,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE1B;AAAChB,EAAA,CA/CQH,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAiDpB,eAAeA,WAAW;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}