{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\care-central\\\\src\\\\componants\\\\frontend\\\\RoomToggle.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { toggleUserRoom } from \"../backend/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomToggle({\n  roomName,\n  isSignedIn,\n  userId\n}) {\n  _s();\n  const [isOn, setIsOn] = useState(isSignedIn);\n  const clickToggle = () => {\n    setIsOn(prevIsOn => {\n      const newIsOn = !prevIsOn;\n      toggleUserRoom(userId, roomName);\n      return newIsOn;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [roomName, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: isSignedIn ? \"Yes\" : \"No\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n}\n_s(RoomToggle, \"0Ro8XKVkrFupO/fB8LOslMQHfHQ=\");\n_c = RoomToggle;\nexport default RoomToggle;\nvar _c;\n$RefreshReg$(_c, \"RoomToggle\");","map":{"version":3,"names":["useState","toggleUserRoom","jsxDEV","_jsxDEV","RoomToggle","roomName","isSignedIn","userId","_s","isOn","setIsOn","clickToggle","prevIsOn","newIsOn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/frontend/RoomToggle.tsx"],"sourcesContent":["import { useState } from \"react\"\r\nimport { toggleUserRoom } from \"../backend/fetchData\"\r\n\r\ninterface RoomToggleProps {\r\n    roomName: string\r\n    isSignedIn: boolean\r\n    userId: number\r\n}\r\nfunction RoomToggle({ roomName, isSignedIn, userId }: RoomToggleProps) {\r\n    const [isOn, setIsOn] = useState<boolean>(isSignedIn)\r\n\r\n    const clickToggle = () => {\r\n        setIsOn((prevIsOn) => {\r\n            const newIsOn = !prevIsOn\r\n            toggleUserRoom(userId, roomName)\r\n            return newIsOn\r\n          })\r\n    }\r\n\r\n  return (\r\n      <div>\r\n          {roomName}\r\n          <p>{isSignedIn ? \"Yes\" : \"No\"}</p>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default RoomToggle"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAOrD,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAwB,CAAC,EAAE;EAAAC,EAAA;EACnE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAUM,UAAU,CAAC;EAErD,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBD,OAAO,CAAEE,QAAQ,IAAK;MAClB,MAAMC,OAAO,GAAG,CAACD,QAAQ;MACzBX,cAAc,CAACM,MAAM,EAAEF,QAAQ,CAAC;MAChC,OAAOQ,OAAO;IAChB,CAAC,CAAC;EACR,CAAC;EAEH,oBACIV,OAAA;IAAAW,QAAA,GACKT,QAAQ,eACTF,OAAA;MAAAW,QAAA,EAAIR,UAAU,GAAG,KAAK,GAAG;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEZ;AAACV,EAAA,CAjBQJ,UAAU;AAAAe,EAAA,GAAVf,UAAU;AAmBnB,eAAeA,UAAU;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}