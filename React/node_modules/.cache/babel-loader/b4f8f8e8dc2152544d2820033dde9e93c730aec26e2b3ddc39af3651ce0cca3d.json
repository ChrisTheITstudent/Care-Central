{"ast":null,"code":"import { User, Children } from \"../../classes\";\n\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\n//         if (err) {\n//             return console.error(err.message)\n//         }\n//         console.log('Connected to Care Central')\n//     })\n\nconst url = \"http://127.0.0.1:8000/\";\nexport async function createUser(username) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      let newUser = new User(json.username);\n      if (json.role) {\n        newUser.setRole(json.role);\n      }\n      if (json.profileImage) {\n        newUser.setBlob(json.profileImage);\n      }\n      if (json.id) {\n        fetch(url + \"children/family/\" + json.id).then(response => response.json()).then(json2 => {\n          Object.keys(json2).forEach(key => {\n            newUser.setChild(json2[key]);\n          });\n        });\n        resolve(newUser);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(err.message);\n    }).catch(err => {\n      console.error(err.message);\n      reject(err.message);\n    });\n  });\n}\nexport function toggleChildIsAttending(childId) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"children/\" + childId + \"/attendance\", {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      resolve(json.message);\n    });\n  });\n}\nexport async function createChildrenList(username) {\n  return new Promise((resolve, reject) => {\n    let userId;\n    let childArray = [];\n    let child;\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      userId = json.id;\n      return fetch(url + \"children/family/\" + userId);\n    }).then(response => response.json()).then(json => {\n      Object.keys(json).forEach(key => {\n        if (json[key][\"4\"] === 1) {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true);\n        } else {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false);\n        }\n        let splitStringArray;\n        splitStringArray = json[key][\"3\"].split(\"/\");\n        let childDay = +splitStringArray[2];\n        let childMonth = +splitStringArray[1];\n        let childYear = +splitStringArray[0];\n        child.setDateOfBirth(childDay, childMonth, childYear);\n        childArray.push(child);\n      });\n      resolve(childArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch children for user: \" + err.message);\n      reject(err.message);\n    });\n  });\n}","map":{"version":3,"names":["User","Children","url","createUser","username","Promise","resolve","reject","fetch","then","response","json","newUser","role","setRole","profileImage","setBlob","id","json2","Object","keys","forEach","key","setChild","catch","err","console","error","message","toggleChildIsAttending","childId","method","headers","createChildrenList","userId","childArray","child","splitStringArray","split","childDay","childMonth","childYear","setDateOfBirth","push"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/backend/fetchData.tsx"],"sourcesContent":["import { User, Children } from \"../../classes\"\r\n\r\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n//         if (err) {\r\n//             return console.error(err.message)\r\n//         }\r\n//         console.log('Connected to Care Central')\r\n//     })\r\n\r\ninterface PostResolved {\r\n    \"Status\": string,\r\n    \"Message\": string\r\n}\r\n\r\nconst url: string = \"http://127.0.0.1:8000/\"\r\n\r\nexport async function createUser(username: string): Promise<User> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let newUser = new User(json.username)\r\n                if (json.role) {\r\n                    newUser.setRole(json.role)\r\n                }\r\n                if (json.profileImage) {\r\n                    newUser.setBlob(json.profileImage)\r\n                }\r\n                if (json.id) {\r\n                    fetch(url + \"children/family/\" + json.id)\r\n                        .then(response => response.json())\r\n                        .then(json2 => {\r\n                            Object.keys(json2).forEach((key: string) => {\r\n                                newUser.setChild(json2[key])\r\n                            })\r\n                        })\r\n                    resolve(newUser)\r\n                }\r\n            })\r\n                    .catch(err => {\r\n                        console.error(err.message)\r\n                        reject(err.message)\r\n                })\r\n\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err.message)\r\n            })\r\n        })\r\n}\r\n\r\nexport function toggleChildIsAttending(childId: number): Promise<PostResolved> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"children/\" + childId + \"/attendance\", {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                resolve(json.message)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function createChildrenList(username: string): Promise<Children[]> {\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        let userId: Number\r\n        let childArray: Children[] = []\r\n        let child: Children\r\n        \r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                userId = json.id\r\n\r\n                return fetch(url + \"children/family/\" + userId)\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                Object.keys(json).forEach((key: string) => {\r\n                    if (json[key][\"4\"] === 1) {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true)\r\n                    } else {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false)\r\n                    }\r\n\r\n                    let splitStringArray: string[]\r\n                    splitStringArray = json[key][\"3\"].split(\"/\")\r\n                    let childDay: number = +splitStringArray[2]\r\n                    let childMonth: number = +splitStringArray[1]\r\n                    let childYear: number = +splitStringArray[0]\r\n                    child.setDateOfBirth(childDay, childMonth, childYear)\r\n\r\n                    childArray.push(child)\r\n                })\r\n                resolve(childArray)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Unable to fetch children for user: \" + err.message)\r\n                reject(err.message)\r\n        })\r\n    })\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}