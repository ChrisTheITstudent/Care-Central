{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\c_mil\\\\Desktop\\\\Dev\\\\TypeScript\\\\care-central\\\\src\\\\componants\\\\frontend\\\\RoomToggle.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { toggleUserRoom } from \"../backend/fetchData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RoomToggle({\n  roomName,\n  isSignedIn,\n  userId,\n  onToggle\n}) {\n  _s();\n  const [isOn, setIsOn] = useState(isSignedIn);\n  useEffect(() => {\n    setIsOn(isSignedIn);\n  }, [isSignedIn]);\n  const clickToggle = () => {\n    toggleUserRoom(userId, roomName).then(() => {\n      onToggle();\n    }).catch(error => {\n      console.error(\"Error toggling room: \", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: isOn ? \"toggleOn\" : \"toggleOff\",\n    onClick: clickToggle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(RoomToggle, \"e7eezbA+hK1WETm7nJJPpKel7do=\");\n_c = RoomToggle;\nexport default RoomToggle;\nvar _c;\n$RefreshReg$(_c, \"RoomToggle\");","map":{"version":3,"names":["useEffect","useState","toggleUserRoom","jsxDEV","_jsxDEV","RoomToggle","roomName","isSignedIn","userId","onToggle","_s","isOn","setIsOn","clickToggle","then","catch","error","console","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/frontend/RoomToggle.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { toggleUserRoom } from \"../backend/fetchData\"\r\n\r\ninterface RoomToggleProps {\r\n    roomName: string\r\n    isSignedIn: boolean\r\n    userId: number\r\n    onToggle: () => void\r\n}\r\nfunction RoomToggle({ roomName, isSignedIn, userId, onToggle }: RoomToggleProps) {\r\n    const [isOn, setIsOn] = useState<boolean>(isSignedIn)\r\n\r\n    useEffect(() => {\r\n        setIsOn(isSignedIn)\r\n    }, [isSignedIn])\r\n\r\n    const clickToggle = () => {\r\n        toggleUserRoom(userId, roomName)\r\n            .then(() => {\r\n            onToggle()\r\n            })\r\n            .catch((error) => {\r\n            console.error(\"Error toggling room: \", error)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={isOn ? \"toggleOn\" : \"toggleOff\"}\r\n            onClick={clickToggle}\r\n        />\r\n  )\r\n}\r\n\r\nexport default RoomToggle"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,cAAc,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAQrD,SAASC,UAAUA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAA0B,CAAC,EAAE;EAAAC,EAAA;EAC7E,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAUM,UAAU,CAAC;EAErDP,SAAS,CAAC,MAAM;IACZY,OAAO,CAACL,UAAU,CAAC;EACvB,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtBX,cAAc,CAACM,MAAM,EAAEF,QAAQ,CAAC,CAC3BQ,IAAI,CAAC,MAAM;MACZL,QAAQ,CAAC,CAAC;IACV,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;MAClBC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC;EAED,oBACIZ,OAAA;IACIc,SAAS,EAAEP,IAAI,GAAG,UAAU,GAAG,WAAY;IAC3CQ,OAAO,EAAEN;EAAY;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEV;AAACb,EAAA,CAvBQL,UAAU;AAAAmB,EAAA,GAAVnB,UAAU;AAyBnB,eAAeA,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}