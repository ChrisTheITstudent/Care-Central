{"ast":null,"code":"import { User, Children } from \"../../classes\";\n\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\n//         if (err) {\n//             return console.error(err.message)\n//         }\n//         console.log('Connected to Care Central')\n//     })\n\nconst url = \"http://127.0.0.1:8000/\";\n// fetchData exclusive (non-export functions)\nfunction isChildrenFormData(entry) {\n  return typeof entry.firstName === \"string\" && typeof entry.lastName === \"string\" && typeof entry.parentUsername === \"string\" && typeof entry.emergencyContact1Name === \"string\" && typeof entry.emergencyContact1Number === \"string\";\n}\nfunction isUserFormData(entry) {\n  return typeof entry.username === \"string\" && typeof entry.role === \"string\" && typeof entry.emergencyContactName === \"string\" && typeof entry.emergencyContactNumber === \"string\";\n}\n\n// Export functions\nexport function manualRegister(entries) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"onboard/single_entries\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(entries)\n    }).then(response => response.json()).then(json => {\n      if (json.status === \"FAILED\") {\n        reject(false);\n      } else if (json.status === \"ERROR\") {\n        resolve(false);\n      } else {\n        reject(false);\n      }\n    });\n  });\n}\nexport function onboardUsers(userData) {\n  return new Promise((resolve, reject) => {\n    const formData = new FormData();\n    formData.append(\"file\", userData);\n    fetch(url + \"onboarding/users\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(json => {\n      if (json.status === \"FAILED\") {\n        reject(false);\n      } else if (json.status === \"ERROR\") {\n        resolve(false);\n      } else if (json.status === \"OK\") {\n        resolve(true);\n      } else {\n        reject(false);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(false);\n    });\n  });\n}\nexport function onboardChildren(userData) {\n  return new Promise((resolve, reject) => {\n    const formData = new FormData();\n    formData.append(\"file\", userData);\n    fetch(url + \"onboarding/children\", {\n      method: \"POST\",\n      body: formData\n    }).then(response => response.json()).then(json => {\n      if (json.status === \"FAILED\") {\n        reject(false);\n      } else if (json.status === \"ERROR\") {\n        resolve(false);\n      } else if (json.status === \"OK\") {\n        resolve(true);\n      } else {\n        reject(false);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(false);\n    });\n  });\n}\nexport async function createUser(username) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      let newUser = new User(json.id, json.username);\n      if (json.role) {\n        newUser.setRole(json.role);\n      }\n      if (json.profileImage) {\n        newUser.setBlob(json.profileImage);\n      }\n      if (json.room) {\n        newUser.setRoom(json.room);\n      }\n      if (json.id) {\n        fetch(url + \"children/family/\" + json.id).then(response => response.json()).then(json2 => {\n          Object.keys(json2).forEach(key => {\n            const childData = json2[key];\n            console.log(childData);\n            const child = new Children(childData[0], childData[1], childData[2], childData[4]);\n            if (childData[3]) {\n              let splitDOB = childData[3].split(\"/\", 3);\n              child.setDateOfBirth(splitDOB[2], splitDOB[1], splitDOB[0]);\n            }\n            child.setRoom(setRoomBasedOnAge(child));\n            if (childData[7]) {\n              if (childData[7] === 1) {\n                child.setMedicalPlan(true);\n              }\n              if (childData[7] === 0) {\n                child.setMedicalPlan(false);\n              } else {\n                console.log(childData[7]);\n              }\n            }\n            if (childData[8]) {\n              let childDataArray = childData.split(\",\");\n              childDataArray.forEach(allergy => {\n                child.addAllergy(allergy);\n              });\n            }\n            if (childData[9]) {\n              let personsDataArray = childData[9].split(\",\");\n              for (let i = 0; i < personsDataArray.length; i += 2) {\n                const element = personsDataArray[i];\n                const element2 = personsDataArray[i + 1];\n                child.addAuthorizedPerson(element, element2);\n              }\n            }\n            if (childData[10]) {\n              for (let i = 0; i < childData[10].length; i += 2) {\n                const element1 = childData[10][i];\n                const element2 = childData[10][i + 1];\n                let contactToAdd = {\n                  name: element1,\n                  contact: element2\n                };\n                childData.addEmergencyContact(1, contactToAdd.name, contactToAdd.contact);\n              }\n            }\n            if (childData[11]) {\n              for (let i = 0; i < childData[11].length; i += 2) {\n                const element1 = childData[11][i];\n                const element2 = childData[11][i + 1];\n                let contactToAdd = {\n                  name: element1,\n                  contact: element2\n                };\n                childData.addEmergencyContact(2, contactToAdd.name, contactToAdd.contact);\n              }\n            }\n            console.log(child);\n            newUser.setChild(child);\n          });\n          resolve(newUser);\n        }).catch(err => {\n          console.error(err.message);\n          reject(err);\n        });\n      } else {\n        resolve(newUser);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(err);\n    });\n  });\n}\nexport async function verifyPassword(data) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/login/\" + data.username + \"/\" + data.password).then(response => response.json()).then(json => {\n      if (json.status === \"OK\") {\n        resolve(true);\n      } else if (json.status === \"FAILED\") {\n        reject(false);\n      }\n    }).catch(err => {\n      console.error(err.message);\n      reject(err);\n    });\n  });\n}\nexport async function toggleChildIsAttending(childId) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"children/\" + childId + \"/attendance\", {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      resolve(json.message);\n    }).catch(err => {\n      console.error(err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function toggleUserRoom(userId, room) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + userId + \"/room/\" + room, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      resolve(json.message);\n    }).catch(err => {\n      console.error(err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function createChildrenList(username) {\n  return new Promise((resolve, reject) => {\n    let userId;\n    let childArray = [];\n    let child;\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      userId = json.id;\n      return fetch(url + \"children/family/\" + userId);\n    }).then(response => response.json()).then(json => {\n      Object.keys(json).forEach(key => {\n        if (json[key][\"4\"] === 1) {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true);\n        } else {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false);\n        }\n        let splitStringArray;\n        splitStringArray = json[key][\"3\"].split(\"/\");\n        let childDay = +splitStringArray[2];\n        let childMonth = +splitStringArray[1];\n        let childYear = +splitStringArray[0];\n        child.setDateOfBirth(childDay, childMonth, childYear);\n        childArray.push(child);\n      });\n      resolve(childArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch children for user: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function getChildrenByRoomName(roomName) {\n  return new Promise((resolve, reject) => {\n    let childArray = [];\n    let child;\n    fetch(url + \"rooms/\" + roomName).then(response => response.json()).then(json => {\n      if (json.error) {\n        reject(new Error(json.error));\n        return;\n      }\n      Object.keys(json).forEach(key => {\n        if (json[key][\"4\"] === 1) {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true);\n        } else {\n          child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false);\n        }\n        let splitStringArray;\n        splitStringArray = json[key][\"3\"].split(\"/\");\n        let childDay = +splitStringArray[2];\n        let childMonth = +splitStringArray[1];\n        let childYear = +splitStringArray[0];\n        child.setDateOfBirth(childDay, childMonth, childYear);\n        childArray.push(child);\n      });\n      resolve(childArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch children for room: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport async function getEducatorsByRoomName(roomName) {\n  return new Promise((resolve, reject) => {\n    let educatorArray = [];\n    let educator;\n    fetch(url + \"educators/rooms/\" + roomName).then(response => response.json()).then(json => {\n      if (json.error) {\n        reject(new Error(json.error));\n      }\n      Object.keys(json).forEach(key => {\n        educator = new User(json[key][0], json[key][\"1\"]);\n        educatorArray.push(educator);\n      });\n      resolve(educatorArray);\n    }).catch(err => {\n      console.error(\"Unable to fetch educators for room: \" + err.message);\n      reject(new Error(err.message));\n    });\n  });\n}\nexport function setRoomBasedOnAge(child) {\n  let ageStringSplit = child.getAge().split(\" \");\n  if (parseInt(ageStringSplit[0]) === 1 && parseInt(ageStringSplit[2]) < 3 || parseInt(ageStringSplit[0]) === 0 && parseInt(ageStringSplit[2]) > 0) {\n    return \"Babies\";\n  }\n  if (parseInt(ageStringSplit[0]) === 1 && parseInt(ageStringSplit[2]) >= 3 || parseInt(ageStringSplit[0]) === 2 && parseInt(ageStringSplit[2]) < 6) {\n    return \"Toddlers\";\n  }\n  if (parseInt(ageStringSplit[0]) === 2 && parseInt(ageStringSplit[2]) >= 6 || parseInt(ageStringSplit[0]) === 3 && parseInt(ageStringSplit[2]) < 3) {\n    return \"Pre Kindergarten\";\n  }\n  if (parseInt(ageStringSplit[0]) === 3 && parseInt(ageStringSplit[2]) >= 3) {\n    return \"Kindergarten\";\n  }\n  if (parseInt(ageStringSplit[0]) > 3) {\n    return \"PreSchool\";\n  } else {\n    return \"Please check DOB\";\n  }\n}","map":{"version":3,"names":["User","Children","url","isChildrenFormData","entry","firstName","lastName","parentUsername","emergencyContact1Name","emergencyContact1Number","isUserFormData","username","role","emergencyContactName","emergencyContactNumber","manualRegister","entries","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","status","onboardUsers","userData","formData","FormData","append","catch","err","console","error","message","onboardChildren","createUser","newUser","id","setRole","profileImage","setBlob","room","setRoom","json2","Object","keys","forEach","key","childData","log","child","splitDOB","split","setDateOfBirth","setRoomBasedOnAge","setMedicalPlan","childDataArray","allergy","addAllergy","personsDataArray","i","length","element","element2","addAuthorizedPerson","element1","contactToAdd","name","contact","addEmergencyContact","setChild","verifyPassword","data","password","toggleChildIsAttending","childId","Error","toggleUserRoom","userId","createChildrenList","childArray","splitStringArray","childDay","childMonth","childYear","push","getChildrenByRoomName","roomName","getEducatorsByRoomName","educatorArray","educator","ageStringSplit","getAge","parseInt"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/CareCentral Git/Care-Central/React/src/componants/backend/fetchData.tsx"],"sourcesContent":["import { User, Children } from \"../../classes\"\r\nimport { ChildrenFormData, UserFormData } from \"../frontend/RegistrationForm\"\r\n\r\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n//         if (err) {\r\n//             return console.error(err.message)\r\n//         }\r\n//         console.log('Connected to Care Central')\r\n//     })\r\n\r\ninterface PostResolved {\r\n    \"Status\": string,\r\n    \"Message\": string\r\n}\r\ninterface VerificationData {\r\n    \"username\": String,\r\n    \"password\": String\r\n}\r\n\r\nconst url: string = \"http://127.0.0.1:8000/\"\r\n// fetchData exclusive (non-export functions)\r\nfunction isChildrenFormData(entry: any): entry is ChildrenFormData {\r\n    return (\r\n        typeof entry.firstName === \"string\" &&\r\n        typeof entry.lastName === \"string\" &&\r\n        typeof entry.parentUsername === \"string\" &&\r\n        typeof entry.emergencyContact1Name === \"string\" &&\r\n        typeof entry.emergencyContact1Number === \"string\"\r\n    );\r\n}\r\nfunction isUserFormData(entry: any): entry is UserFormData {\r\n    return (\r\n        typeof entry.username === \"string\" &&\r\n        typeof entry.role === \"string\" &&\r\n        typeof entry.emergencyContactName === \"string\" &&\r\n        typeof entry.emergencyContactNumber === \"string\"\r\n    );\r\n}\r\n\r\n// Export functions\r\nexport function manualRegister(entries: Array<UserFormData | ChildrenFormData>): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"onboard/single_entries\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(entries),\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (json.status === \"FAILED\") {\r\n                reject(false)\r\n                } else if (json.status === \"ERROR\") {\r\n                    resolve(false)\r\n                } else {\r\n                    reject(false)\r\n                }\r\n        })\r\n    })\r\n}\r\n\r\nexport function onboardUsers(userData: File): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", userData)\r\n\r\n        fetch(url + \"onboarding/users\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (json.status === \"FAILED\") {\r\n                    reject(false)\r\n                } else if (json.status === \"ERROR\") {\r\n                    resolve(false)\r\n                } else if (json.status === \"OK\") {\r\n                    resolve(true)\r\n                } else {\r\n                    reject(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(false)\r\n            })\r\n    })\r\n}\r\n\r\nexport function onboardChildren(userData: File): Promise<boolean> {\r\n    return new Promise((resolve, reject) => {\r\n        const formData = new FormData()\r\n        formData.append(\"file\", userData)\r\n\r\n        fetch(url + \"onboarding/children\", {\r\n            method: \"POST\",\r\n            body: formData\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (json.status === \"FAILED\") {\r\n                    reject(false)\r\n                } else if (json.status === \"ERROR\") {\r\n                    resolve(false)\r\n                } else if (json.status === \"OK\") {\r\n                    resolve(true)\r\n                } else {\r\n                    reject(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(false)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function createUser(username: string | null): Promise<User> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                let newUser = new User(json.id, json.username)\r\n                if (json.role) {\r\n                    newUser.setRole(json.role)\r\n                }\r\n                if (json.profileImage) {\r\n                    newUser.setBlob(json.profileImage)\r\n                }\r\n                if (json.room) {\r\n                    newUser.setRoom(json.room)\r\n                }\r\n                if (json.id) {\r\n                    fetch(url + \"children/family/\" + json.id)\r\n                        .then(response => response.json())\r\n                        .then(json2 => {\r\n                            Object.keys(json2).forEach((key: string) => {\r\n                                const childData = json2[key];\r\n                                console.log(childData)\r\n                                const child = new Children(childData[0], childData[1], childData[2], childData[4]);\r\n                                if (childData[3]) {\r\n                                    let splitDOB = childData[3].split(\"/\", 3)\r\n                                    child.setDateOfBirth(splitDOB[2], splitDOB[1], splitDOB[0])\r\n                                }\r\n                                child.setRoom(setRoomBasedOnAge(child))\r\n                                if (childData[7]) {\r\n                                    if (childData[7] === 1) {\r\n                                        child.setMedicalPlan(true)\r\n                                    }\r\n                                    if (childData[7] === 0) {\r\n                                        child.setMedicalPlan(false)\r\n                                    }\r\n                                    else {\r\n                                        console.log(childData[7])\r\n                                    }\r\n                                }\r\n                                if (childData[8]) {\r\n                                    let childDataArray = childData.split(\",\")\r\n                                    childDataArray.forEach((allergy: string) => {\r\n                                        child.addAllergy(allergy)\r\n                                    });\r\n                                }\r\n                                if (childData[9]) {\r\n                                    let personsDataArray = childData[9].split(\",\")\r\n                                    for (let i = 0; i < personsDataArray.length; i+=2) {\r\n                                        const element = personsDataArray[i];\r\n                                        const element2 = personsDataArray[i + 1]\r\n                                        child.addAuthorizedPerson(element, element2)\r\n                                    }\r\n                                }\r\n                                if (childData[10]) {\r\n                                    for (let i = 0; i < childData[10].length; i+=2) {\r\n                                        const element1 = childData[10][i];\r\n                                        const element2 = childData[10][i + 1]\r\n                                        \r\n                                        let contactToAdd = {\r\n                                            name: element1,\r\n                                            contact: element2\r\n                                        }\r\n                                        childData.addEmergencyContact(1, contactToAdd.name, contactToAdd.contact)\r\n                                    }\r\n                                }\r\n                                if (childData[11]) {\r\n                                    for (let i = 0; i < childData[11].length; i+=2) {\r\n                                        const element1 = childData[11][i];\r\n                                        const element2 = childData[11][i + 1]\r\n                                        \r\n                                        let contactToAdd = {\r\n                                            name: element1,\r\n                                            contact: element2\r\n                                        }\r\n                                        childData.addEmergencyContact(2, contactToAdd.name, contactToAdd.contact)\r\n                                    }\r\n                                }\r\n\r\n                                console.log(child)\r\n                                \r\n                                newUser.setChild(child)\r\n                            })\r\n                            resolve(newUser)\r\n                        })\r\n                        .catch(err => {\r\n                            console.error(err.message)\r\n                            reject(err)\r\n                        })\r\n                } else {\r\n                    resolve(newUser)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function verifyPassword(data: VerificationData): Promise<Boolean | Error> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/login/\" + data.username + \"/\" + data.password)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                if (json.status === \"OK\") {\r\n                    resolve(true)\r\n                } else if (json.status === \"FAILED\") {\r\n                    reject(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err)\r\n            })\r\n    })\r\n}\r\n\r\nexport async function toggleChildIsAttending(childId: number): Promise<PostResolved> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"children/\" + childId + \"/attendance\", {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            resolve(json.message)\r\n        })\r\n        .catch(err => {\r\n            console.error(err.message)\r\n            reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function toggleUserRoom(userId: number, room: string | null): Promise<PostResolved> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + userId + \"/room/\" + room, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                resolve(json.message)\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(new Error(err.message))\r\n            })\r\n    })\r\n}\r\n\r\nexport async function createChildrenList(username: string): Promise<Children[]> {\r\n    return new Promise((resolve, reject) => {\r\n        \r\n        let userId: Number\r\n        let childArray: Children[] = []\r\n        let child: Children\r\n        \r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                userId = json.id\r\n\r\n                return fetch(url + \"children/family/\" + userId)\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                Object.keys(json).forEach((key: string) => {\r\n                    if (json[key][\"4\"] === 1) {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true)\r\n                    } else {\r\n                        child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false)\r\n                    }\r\n\r\n                    let splitStringArray: string[]\r\n                    splitStringArray = json[key][\"3\"].split(\"/\")\r\n                    let childDay: number = +splitStringArray[2]\r\n                    let childMonth: number = +splitStringArray[1]\r\n                    let childYear: number = +splitStringArray[0]\r\n                    child.setDateOfBirth(childDay, childMonth, childYear)\r\n\r\n                    childArray.push(child)\r\n                })\r\n                resolve(childArray)\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Unable to fetch children for user: \" + err.message)\r\n                reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getChildrenByRoomName(roomName: String): Promise<Children[]> {\r\n    return new Promise((resolve, reject) => {\r\n    let childArray: Children[] = []\r\n    let child: Children\r\n\r\n    fetch(url + \"rooms/\" + roomName)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.error) {\r\n                reject(new Error(json.error))\r\n                return\r\n            }\r\n            Object.keys(json).forEach((key: string) => {\r\n            if (json[key][\"4\"] === 1) {\r\n                child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], true)\r\n            } else {\r\n                child = new Children(json[key][0], json[key][\"1\"], json[key][\"2\"], false)\r\n            }\r\n\r\n            let splitStringArray: string[]\r\n            splitStringArray = json[key][\"3\"].split(\"/\")\r\n            let childDay: number = +splitStringArray[2]\r\n            let childMonth: number = +splitStringArray[1]\r\n            let childYear: number = +splitStringArray[0]\r\n            child.setDateOfBirth(childDay, childMonth, childYear)\r\n\r\n            childArray.push(child)\r\n        })\r\n        resolve(childArray)\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Unable to fetch children for room: \" + err.message)\r\n        reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport async function getEducatorsByRoomName(roomName: String): Promise<User[]> {\r\n    return new Promise((resolve, reject) => {\r\n    let educatorArray: User[] = []\r\n    let educator: User\r\n\r\n    fetch(url + \"educators/rooms/\" + roomName)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            if (json.error) {\r\n                reject(new Error(json.error))\r\n            }\r\n            Object.keys(json).forEach((key: string) => {\r\n                educator = new User(json[key][0], json[key][\"1\"])\r\n                educatorArray.push(educator)\r\n        })\r\n        resolve(educatorArray)\r\n    })\r\n    .catch(err => {\r\n        console.error(\"Unable to fetch educators for room: \" + err.message)\r\n        reject(new Error(err.message))\r\n        })\r\n    })\r\n}\r\n\r\nexport function setRoomBasedOnAge(child: Children): string {\r\n    let ageStringSplit: string[] = child.getAge().split(\" \")\r\n\r\n    if ((parseInt(ageStringSplit[0]) === 1 && parseInt(ageStringSplit[2]) < 3) || (parseInt(ageStringSplit[0]) === 0 && parseInt(ageStringSplit[2]) > 0)) {\r\n        return \"Babies\"\r\n    }\r\n    if ((parseInt(ageStringSplit[0]) === 1 && parseInt(ageStringSplit[2]) >= 3) || (parseInt(ageStringSplit[0]) === 2 && parseInt(ageStringSplit[2]) < 6)) {\r\n        return \"Toddlers\"\r\n    }\r\n    if ((parseInt(ageStringSplit[0]) === 2 && parseInt(ageStringSplit[2]) >= 6) || (parseInt(ageStringSplit[0]) === 3 && parseInt(ageStringSplit[2]) < 3)) {\r\n        return \"Pre Kindergarten\"\r\n    }\r\n    if (parseInt(ageStringSplit[0]) === 3 && parseInt(ageStringSplit[2]) >= 3) {\r\n        return \"Kindergarten\"\r\n    }\r\n    if (parseInt(ageStringSplit[0]) > 3) {\r\n        return \"PreSchool\"\r\n    }\r\n    else {\r\n        return \"Please check DOB\"\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}