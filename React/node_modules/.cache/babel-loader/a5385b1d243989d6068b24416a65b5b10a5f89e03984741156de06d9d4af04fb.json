{"ast":null,"code":"import { User } from \"../../classes\";\n\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\n//         if (err) {\n//             return console.error(err.message)\n//         }\n//         console.log('Connected to Care Central')\n//     })\n\nconst url = \"http://127.0.0.1:8000/\";\nexport async function createUser(username) {\n  return new Promise((resolve, reject) => {\n    fetch(url + \"users/\" + username).then(response => response.json()).then(json => {\n      console.log(json);\n      let newUser = new User(json[1]);\n      if (json[3]) {\n        newUser.setRole(json[3]);\n      }\n      if (json[4]) {\n        newUser.setBlob(json[4]);\n      }\n      console.log(newUser);\n      resolve(newUser);\n    }).catch(err => {\n      console.error(err.message);\n      reject(err.message);\n    });\n  });\n}","map":{"version":3,"names":["User","url","createUser","username","Promise","resolve","reject","fetch","then","response","json","console","log","newUser","setRole","setBlob","catch","err","error","message"],"sources":["C:/Users/c_mil/Desktop/Dev/TypeScript/care-central/src/componants/backend/fetchData.tsx"],"sourcesContent":["import { User, Children } from \"../../classes\"\r\n\r\n// let db = new sql.Database(\"d:\\CareCentral.db\", (err) => {\r\n//         if (err) {\r\n//             return console.error(err.message)\r\n//         }\r\n//         console.log('Connected to Care Central')\r\n//     })\r\n\r\ninterface UserRow {\r\n    userId: number;\r\n    username: string;\r\n    // This will be hashed\r\n    passwordHash: string;\r\n    role: string;\r\n    profileImage: Blob | null;\r\n}\r\n\r\nconst url: string = \"http://127.0.0.1:8000/\"\r\n\r\nexport async function createUser(username: string): Promise<User> {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url + \"users/\" + username)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                console.log(json)\r\n                let newUser = new User(json[1])\r\n                if (json[3]) {\r\n                    newUser.setRole(json[3])\r\n                }\r\n                if (json[4]) {\r\n                    newUser.setBlob(json[4])\r\n                }\r\n                console.log(newUser)\r\n                resolve(newUser)\r\n            })\r\n            .catch(err => {\r\n                console.error(err.message)\r\n                reject(err.message)\r\n            })\r\n    })\r\n}"],"mappings":"AAAA,SAASA,IAAI,QAAkB,eAAe;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAWA,MAAMC,GAAW,GAAG,wBAAwB;AAE5C,OAAO,eAAeC,UAAUA,CAACC,QAAgB,EAAiB;EAC9D,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACpCC,KAAK,CAACN,GAAG,GAAG,QAAQ,GAAGE,QAAQ,CAAC,CAC3BK,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjB,IAAIG,OAAO,GAAG,IAAIb,IAAI,CAACU,IAAI,CAAC,CAAC,CAAC,CAAC;MAC/B,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;QACTG,OAAO,CAACC,OAAO,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B;MACA,IAAIA,IAAI,CAAC,CAAC,CAAC,EAAE;QACTG,OAAO,CAACE,OAAO,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;MAC5B;MACAC,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;MACpBR,OAAO,CAACQ,OAAO,CAAC;IACpB,CAAC,CAAC,CACDG,KAAK,CAACC,GAAG,IAAI;MACVN,OAAO,CAACO,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;MAC1Bb,MAAM,CAACW,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,CAAC;EACV,CAAC,CAAC;AACN","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}